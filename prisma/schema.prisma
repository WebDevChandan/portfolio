// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type SocialLink {
  label String
  link  String
}

type Skill {
  name  String
  level String
}

type Contact {
  label  String
  detail String
}

type Institution {
  title    String
  location String
}

type Organization {
  title    String
  location String
}

type CertificateHeaderDetail {
  authority   String
  issueDate   String
  expiryDate  String
  skill       String
  link        String
  description String
}

type CertificateMainDetail {
  largeImage String
  imgText    String
}

type PortfolioHeaderDetail {
  from        String
  to          String
  client      String
  link        String
  tools       String[]
  demo        String
  description String
}

type PortfolioMainDetail {
  imgSrc       String[]
  altText      String
  titleText    String
  webFrameLink String
}

model PersonalInfo {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  myImages    String[]
  roles       String[]
  about       String
  resume      String
  socialLinks SocialLink[]
  skills      Skill[]
  contact     Contact[]
  created_at  DateTime     @default(now())
  update_at   DateTime     @updatedAt
}

model Education {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  to          String
  from        String
  level       String
  info        String
  institution Institution
  created_at  DateTime    @default(now())
  update_at   DateTime    @updatedAt
}

model Testimonial {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  img        String
  region     String
  feedback   String
  active     Boolean  @default(false)
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt
}

model Experience {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  from             String
  to               String
  role             String
  experienceDetail String
  organization     Organization
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
}

model Certificate {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  label             String
  src               String
  info              String
  details_id        String            @unique
  certificateDetail CertificateDetail @relation(fields: [details_id], references: [slug])
  created_at        DateTime          @default(now())
  update_at         DateTime          @updatedAt
}

model CertificateDetail {
  id                      String                  @id @default(auto()) @map("_id") @db.ObjectId
  slug                    String                  @unique @default(uuid())
  certificateHeaderDetail CertificateHeaderDetail
  certificateMainDetail   CertificateMainDetail
  Certificate             Certificate?
  created_at              DateTime                @default(now())
  update_at               DateTime                @updatedAt
}

model Portfolio {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  src               String
  altText           String
  category_id       String            @db.ObjectId
  portfolioCategory PortfolioCategory @relation(fields: [category_id], references: [id])
  details_id        String            @unique
  portfolioDetail   PortfolioDetail   @relation(fields: [details_id], references: [slug])
  created_at        DateTime          @default(now())
  update_at         DateTime          @updatedAt
}

model PortfolioCategory {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  label      String
  active     Boolean     @default(false)
  Portfolio  Portfolio[]
  created_at DateTime    @default(now())
  update_at  DateTime    @updatedAt
}

model PortfolioDetail {
  id                    String                @id @default(auto()) @map("_id") @db.ObjectId
  slug                  String                @unique @default(uuid())
  portfolioHeaderDetail PortfolioHeaderDetail
  portfolioMainDetail   PortfolioMainDetail
  Portfolio             Portfolio?
  created_at            DateTime              @default(now())
  update_at             DateTime              @updatedAt
}

model Admin {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  email     String @unique
  password  String
}
